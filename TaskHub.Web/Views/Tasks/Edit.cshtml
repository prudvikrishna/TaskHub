@model TaskHub.Web.Models.Tasks

@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


    <html>
 <body>
	<div class="container">
		<ol class="breadcrumb">
		  <li><a href="#">Home</a></li>
		  <li><a href="@Url.Action("Index")">Tasks</a></li>
		  <li class="active"> @Html.DisplayFor(model => model.Title)</li>
		</ol>
	</div>
     @using (Html.BeginForm()) {
    @Html.ValidationSummary(true)
	<div class="container">
		<form class="form-horizontal form-centered" role="form">
            <div class="form-group">
  				 @Html.HiddenFor(model => model.TaskId)
  			</div>
  			<div class="form-group">
  				<label for="Title" class="col-sm-4 control-label">  @Html.LabelFor(model => model.Title)</label>
				<div class="col-sm-8"> @Html.TextBoxFor(model => model.Title, new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Title) </div>
  			</div>
  			<div class="form-group">
  				<label for="txtStatus" class="col-sm-4 control-label"> @Html.DisplayNameFor(model => model.Status)</label>
  				<div class="col-sm-8">
                   @{
                    List<SelectListItem> listItems= new List<SelectListItem>();
                    listItems.Add(new SelectListItem
                        {
                          Text = "Open",
                          Value = "Open"
                        });
                   listItems.Add(new SelectListItem
                        {
                            Text = "InProgress",
                            Value = "InProgress",
                         });
                   listItems.Add(new SelectListItem
                        {
                            Text = "Closed",
                            Value = "Closed"
                        });
                   }
  				@Html.DropDownListFor(model => model.Status,listItems, new { @class = "form-control" })
  				
            @Html.ValidationMessageFor(model => model.Status)
                      </div>
  			</div>
  			<div class="form-group">
  				<label for="txtPriority" class="control-label col-sm-4">@Html.DisplayNameFor(model => model.Priority)</label>
  				<div class="col-sm-8">
                       @{
                    List<SelectListItem> listPriority= new List<SelectListItem>();
                    listPriority.Add(new SelectListItem
                        {
                          Text = "High",
                          Value = "High"
                        });
                    listPriority.Add(new SelectListItem
                        {
                            Text = "Medium",
                            Value = "Medium",
                         });
                    listPriority.Add(new SelectListItem
                        {
                            Text = "Low",
                            Value = "Low"
                        });
                   }
  				@Html.DropDownListFor(model => model.Priority, listPriority,new { @class = "form-control" })
            @Html.ValidationMessageFor(model => model.Priority)
                      </div>
  				</div>
  			
         <div class="form-group">
  				<label for="txtDuedate" class="control-label col-sm-4"> @Html.DisplayNameFor(model => model.DueDate)</label>
  				<div class="col-sm-8">
  				@Html.TextBoxFor(model => model.DueDate, new { @class = "date-picker form-control", @readonly="readonly" })
            @Html.ValidationMessageFor(model => model.DueDate)
      			</div>
  			</div>
  			<div class="form-group">
  				<label for="txtAssignedTo" class="control-label col-sm-4">@Html.DisplayNameFor(model => model.AssignedTo)</label>
  				<div class="col-sm-8 dropdown">
                   
  					@Html.DropDownList("AssignedTo", String.Empty)
            @Html.HiddenFor(model => model.AssignedTo)
            @Html.ValidationMessageFor(model => model.AssignedTo) </div>
  				</div>
  			
        <div class="form-group">
  				<label for="txtRequestedby" class="control-label col-sm-4">@Html.DisplayNameFor(model => model.RequestedBy)</label>
  				<div class="col-sm-8 dropdown">
  					@Html.DropDownList("RequestedBy", String.Empty)
            @Html.HiddenFor(model => model.RequestedBy)
            @Html.ValidationMessageFor(model => model.RequestedBy) </div>
  				</div>
            <div class="form-group">
  				 @Html.HiddenFor(model => model.CreatedDate)
  			</div>
            <div class="form-group">
  				 @Html.HiddenFor(model => model.LastModifiedDate,new { @Value = System.DateTime.Now })
  			</div>
            
  		<div class="form-group">
              <div class="col-sm-8"></div>
		<div class="col-sm-8">
            <input type="submit" value="Save" class="pull-right btn btn-primary btnEdit" />
                     
            
                     @Html.ActionLink("Back to List", "Index", new { Controller = "Tasks" }, new { @class = "pull-right btn btn-default btnBacktolist" })
  		</div>
        </div>	
        	
	</form>
        </div>
     }
        </body>
    </html>
    

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
